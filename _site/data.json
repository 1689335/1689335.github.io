[{"layout":"default","title":"file1","content":"# file1\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder1/","name":"file1.md","path":"history/test_long/folder1/file1.md","url":"/history/test_long/folder1/file1.html"},{"permalink":"/history/test_long/folder1/","layout":"default","title":"I’m folder1","content":"# I'm folder1\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder1/","name":"README.md","path":"history/test_long/folder1/README.md","url":"/history/test_long/folder1/"},{"permalink":"/algorithm/leetcode/","layout":"default","title":"leetcode","content":"\n# leetcode\n\nsource: `{{ page.path }}`\n","dir":"/algorithm/leetcode/","name":"README.md","path":"algorithm/leetcode/README.md","url":"/algorithm/leetcode/"},{"layout":"default","title":null,"content":"","dir":"/tensorflow/","name":"numpy.md","path":"tensorflow/numpy.md","url":"/tensorflow/numpy.html"},{"layout":"default","title":"file3","content":"# file3\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder1/folder2/","name":"file3.md","path":"history/test_long/folder1/folder2/file3.md","url":"/history/test_long/folder1/folder2/file3.html"},{"permalink":"//","layout":"default","title":"jekyll-rtd-theme","content":"# jekyll-rtd-theme\n\n![CI](https://github.com/rundocs/jekyll-rtd-theme/workflows/CI/badge.svg?branch=develop)\n![jsDelivr](https://data.jsdelivr.com/v1/package/gh/rundocs/jekyll-rtd-theme/badge)\n\nJust another documentation theme compatible with GitHub Pages\n\n## What it does?\n\nThis theme is inspired by [sphinx-rtd-theme](https://github.com/readthedocs/sphinx_rtd_theme) and refactored with:\n\n- [@primer/css](https://github.com/primer/css)\n- [github-pages](https://github.com/github/pages-gem) ([dependency versions](https://pages.github.com/versions/))\n\n## Quick start\n\n```yml\nremote_theme: rundocs/jekyll-rtd-theme\n```\n\nYou can [generate](https://github.com/rundocs/starter-slim/generate) with the same files and folders from [rundocs/starter-slim](https://github.com/rundocs/starter-slim/)\n\n## Usage\n\nDocumentation that can guide how to create with Github pages, please refer to [rundocs.io](https://rundocs.io) for details\n\n## Features\n\n- Shortcodes (Toasts card, mermaid)\n- Pages Plugins (emoji, gist, avatar, mentions)\n- Auto generate sidebar\n- [Attribute List Definitions](https://kramdown.gettalong.org/syntax.html#attribute-list-definitions) (Primer/css utilities, Font Awesome 4)\n- Service worker (caches)\n- SEO (404, robots.txt, sitemap.xml)\n- Canonical Link (Open Graph, Twitter Card, Schema data)\n\n## Options\n\n| name | default value | description |\n| ------------- | -------------------- | ----------------- |\n| `title` | repo name | |\n| `description` | repo description | |\n| `url` | user domain or cname | |\n| `baseurl` | repo name | |\n| `lang` | `en` | |\n| `direction` | `auto` | `ltr` or `rtl` |\n| `highlighter` | `rouge` | Cannot be changed |\n\n```yml\n# folders sort\nreadme_index:\n with_frontmatter: true\n\nmeta:\n key1: value1\n key2: value2\n .\n .\n .\n\ngoogle:\n gtag:\n adsense:\n\nmathjax: # this will prased to json, default: {}\n\nmermaid:\n custom: # mermaid link\n initialize: # this will prased to json, default: {}\n\nscss: # also _includes/extra/styles.scss\nscript: # also _includes/extra/script.js\n\ntranslate:\n # shortcodes\n danger:\n note:\n tip:\n warning:\n # 404\n not_found:\n # copyright\n revision:\n # search\n searching:\n search:\n search_docs:\n search_results:\n search_results_found: # the \"#\" in this translate will replaced with results size!\n search_results_not_found:\n\nplugins:\n - jemoji\n - jekyll-avatar\n - jekyll-mentions\n```\n\n## The license\n\nThe theme is available as open source under the terms of the MIT License\n","dir":"/","name":"README.md","path":"README.md","url":"/"},{"layout":"default","title":"file2","content":"# file2\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder1/folder2/","name":"file2.md","path":"history/test_long/folder1/folder2/file2.md","url":"/history/test_long/folder1/folder2/file2.html"},{"layout":"default","title":"file1","content":"# file1\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder1/folder2/","name":"file1.md","path":"history/test_long/folder1/folder2/file1.md","url":"/history/test_long/folder1/folder2/file1.html"},{"permalink":"/history/test_long/folder1/folder2/","layout":"default","title":"I’m folder2","content":"# I'm folder2\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder1/folder2/","name":"README.md","path":"history/test_long/folder1/folder2/README.md","url":"/history/test_long/folder1/folder2/"},{"layout":"default","title":"file3","content":"# file3\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder1/","name":"file3.md","path":"history/test_long/folder1/file3.md","url":"/history/test_long/folder1/file3.html"},{"layout":"default","title":"file2","content":"# file2\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder1/","name":"file2.md","path":"history/test_long/folder1/file2.md","url":"/history/test_long/folder1/file2.html"},{"layout":"default","title":null,"content":"\n**安装** \nsudo apt-get install ubuntu-desktop\nsudo apt-get install unity unity-tweak-tool\n\n**更新ubuntu** \nsudo apt-get update\nsudo apt-get upgrade\n\n**移除所有无效的包和缓存** \nsudo apt-get autoremove\nsudo apt-get autoclean\n\n**启动** \nservice lightdm restart\n\n**安装GNOME 3** \nsudo apt-get install gnome-session-flashback gnome-session-flashback gnome-shell gnome-tweak-tool gnome-themes* \nsudo apt-get -y –auto-remove purge gnome-session-flashback gnome-session-flashback gnome-shell gnome-tweak-tool gnome-themes* \n\n**设置自动登录** \n自动登录 GNOME SHELL CLASSIC： \nsudo /usr/lib/lightdm/lightdm-set-defaults -s gnome-classic \n自动登录 GNOME3: \nsudo /usr/lib/lightdm/lightdm-set-defaults -s gnome-shell \n\n**删除UNITY** \nsudo apt-get -y –auto-remove purge unity \nsudo apt-get -y –auto-remove purge unity-common \nsudo apt-get -y –auto-remove purge unity-lens* \nsudo apt-get -y –auto-remove purge unity-services \nsudo apt-get -y –auto-remove purge unity-asset-pool \nsudo apt-get autoremove \nsudo apt-get autoclean \n\n**分辨率设置** \n打开终端，输入xrandr，只有800600 \n在终端输入sudo xdiagnose，输入密码，弹出xdiagnose设置框，将debug下的三个选项全部勾选，然后选择“应用”。 \n输入reboot重启虚拟机。分辨率已经修改成功。可在“系统设置”——>\"显示\"中选择合适的分辨率。 \n","dir":"/linux/ubuntu/","name":"图形化界面安装.md","path":"linux/ubuntu/图形化界面安装.md","url":"/linux/ubuntu/%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%E5%AE%89%E8%A3%85.html"},{"permalink":"/linux/ubuntu/","layout":"default","title":"ubuntu","content":"\n# ubuntu \n\nsource: `{{ page.path }}`\n","dir":"/linux/ubuntu/","name":"README.md","path":"linux/ubuntu/README.md","url":"/linux/ubuntu/"},{"layout":"default","title":"file3","content":"# file3\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder2/folder1/","name":"file3.md","path":"history/test_long/folder2/folder1/file3.md","url":"/history/test_long/folder2/folder1/file3.html"},{"layout":"default","title":"file2","content":"# file2\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder2/folder1/","name":"file2.md","path":"history/test_long/folder2/folder1/file2.md","url":"/history/test_long/folder2/folder1/file2.html"},{"layout":"default","title":"file1","content":"# file1\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder2/folder1/","name":"file1.md","path":"history/test_long/folder2/folder1/file1.md","url":"/history/test_long/folder2/folder1/file1.html"},{"permalink":"/history/test_long/folder2/folder1/","layout":"default","title":"I’m folder1","content":"# I'm folder1\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder2/folder1/","name":"README.md","path":"history/test_long/folder2/folder1/README.md","url":"/history/test_long/folder2/folder1/"},{"layout":"default","title":"file3","content":"# file3\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder2/","name":"file3.md","path":"history/test_long/folder2/file3.md","url":"/history/test_long/folder2/file3.html"},{"layout":"default","title":"file2","content":"# file2\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder2/","name":"file2.md","path":"history/test_long/folder2/file2.md","url":"/history/test_long/folder2/file2.html"},{"layout":"default","title":"file1","content":"# file1\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder2/","name":"file1.md","path":"history/test_long/folder2/file1.md","url":"/history/test_long/folder2/file1.html"},{"permalink":"/history/test_long/folder2/","layout":"default","title":"I’m folder2","content":"# I'm folder2\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder2/","name":"README.md","path":"history/test_long/folder2/README.md","url":"/history/test_long/folder2/"},{"layout":"default","title":"file3","content":"# file3\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder1/folder2/folder1/","name":"file3.md","path":"history/test_long/folder1/folder2/folder1/file3.md","url":"/history/test_long/folder1/folder2/folder1/file3.html"},{"layout":"default","title":"file2","content":"# file2\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder1/folder2/folder1/","name":"file2.md","path":"history/test_long/folder1/folder2/folder1/file2.md","url":"/history/test_long/folder1/folder2/folder1/file2.html"},{"layout":"default","title":"file1","content":"# file1\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder1/folder2/folder1/","name":"file1.md","path":"history/test_long/folder1/folder2/folder1/file1.md","url":"/history/test_long/folder1/folder2/folder1/file1.html"},{"permalink":"/history/test_long/folder1/folder2/folder1/","layout":"default","title":"I’m folder1","content":"# I'm folder1\n\nsource: `{{ page.path }}`\n","dir":"/history/test_long/folder1/folder2/folder1/","name":"README.md","path":"history/test_long/folder1/folder2/folder1/README.md","url":"/history/test_long/folder1/folder2/folder1/"},{"sort":1,"layout":"default","title":"install","content":"# install\n\nadaconada:\nhttps://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/\n\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\nconda config --set show_channel_urls yes\n\nconda info\n\njupytor notebook --generat-config\n\n修改：~/.jupyter/jupyter_notebook_config.py\nc.NotebookApp.notebook_dir = 'local dir'\n\n\nconda install package\nconda remove package\nconda update\n\n\ntensorflow：\n\nconda create --name tensorflow2.0 python=3.7\nconda create -n tensorflow2.0 python=3.7\n\n\nconda env list\nactivate tensorflow2.0\n\n\npip install numpy matplotlib pillow scikit-learn pandas -i https://pypi.tuna.tsinghua.edu.cn/simple\npip3 install\npip install tensorflow==2.0.0-beta\n\n或者\nconda install numpy matplotlib PIL scikit-learn pandas\nconda install tensorflow==2.0.0-beta\n\n\nimport tensorflow as tf\n","dir":"/tensorflow/","name":"install.md","path":"tensorflow/install.md","url":"/tensorflow/install.html"},{"sort":1,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=1 lang=cpp\n *\n * [1] 两数之和\n */\n\n// @lc code=start\nclass Solution {\npublic:\n vector<int> twoSum(vector<int>& nums, int target) {\n unordered_map<int, int> m;\n\n for (int i = 0; i < nums.size(); ++i) {\n m[target - nums[i]] = i;\n }\n\n for (int i = 0; i < nums.size(); ++i) {\n auto it = m.find(nums[i]);\n if (it != m.end()) {\n if (it->second != i) {\n return {i, it->second};\n }\n }\n }\n return {-1, -1};\n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"两数之和.md","path":"algorithm/leetcode/两数之和.md","url":"/algorithm/leetcode/%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C.html"},{"sort":1,"permalink":"/algorithm/","layout":"default","title":"数据结构与算法","content":"<h1 id=\"数据结构与算法\">数据结构与算法</h1>\n\n<ul>\n <li><a href=\"/algorithm/leetcode/\">leetcode</a>\n <ul>\n <li><a href=\"/algorithm/leetcode/%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C.html\">两数之和.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0.html\">两数相加.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2.html\">无重复字符的最长子串.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%AD%A3%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0.html\">寻找两个正序数组的中位数.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2.html\">最长回文子串.md</a></li>\n <li><a href=\"/algorithm/leetcode/z-%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2.html\">z-字形变换.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC.html\">整数反转.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0-atoi.html\">字符串转换整数-atoi.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E5%9B%9E%E6%96%87%E6%95%B0.html\">回文数.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D.html\">正则表达式匹配.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8.html\">盛最多水的容器.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97.html\">整数转罗马数字.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0.html\">罗马数字转整数.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80.html\">最长公共前缀.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C.html\">三数之和.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C.html\">最接近的三数之和.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88.html\">电话号码的字母组合.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C.html\">四数之和.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACn%E4%B8%AA%E8%8A%82%E7%82%B9.html\">删除链表的倒数第n个节点.md</a></li>\n <li><a href=\"/algorithm/leetcode/%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7.html\">有效的括号.md</a></li>\n </ul>\n </li>\n</ul>\n","dir":"/algorithm/","name":"README.md","path":"algorithm/README.md","url":"/algorithm/"},{"sort":1,"layout":"default","title":"install","content":"# install\n\n**更换科大源**\n```\nsudo sh -c 'echo \"deb https://mirrors.ustc.edu.cn/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'\n\nsudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n\nsudo apt-get update\nsudo apt-get upgrade\nsudo apt-get install ros-kinetic-desktop-full\nsudo apt-get install python-rosinstall\n```\n\n**安装依赖包**\n```\nsudo rosdep init\nrosdep update\n```\n\n**科大源** \n\n<http://mirrors.ustc.edu.cn/help/ros.html?highlight=ros>\n\n**参考** \n\n<https://zhuanlan.zhihu.com/p/107218921>\n\n","dir":"/ros/","name":"install.md","path":"ros/install.md","url":"/ros/install.html"},{"sort":1,"permalink":"/history/test/","layout":"default","title":"Test Documentation","content":"<h1 id=\"test-documentation\">Test Documentation</h1>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid all=true %}\n</code></pre>  </div></div>\n\n<ul>\n <li><a href=\"/history/test/markdown.html\">Markdown Elements</a></li>\n <li><a href=\"/history/test/toasts.html\">Toasts Card</a></li>\n <li><a href=\"/history/test/codes.html\">Code Blocks</a></li>\n <li><a href=\"/history/test/mermaid.html\">Mermaid Test</a></li>\n <li><a href=\"/history/test/emoji.html\">Emoji Test</a></li>\n <li><a href=\"/history/test/gist.html\">Gist Test</a></li>\n <li><a href=\"/history/test/avatar.html\">Avatar Test</a></li>\n <li><a href=\"/history/test/mentions.html\">Mentions Test</a></li>\n <li><a href=\"/history/test/fonts.html\">Fonts Test</a></li>\n <li><a href=\"/history/test/mathjax.html\">Mathjax Test</a></li>\n <li><a href=\"/history/test/utilities.html\">Primer Utilities Test</a></li>\n</ul>\n","dir":"/history/test/","name":"README.md","path":"history/test/README.md","url":"/history/test/"},{"sort":1,"layout":"default","title":"Markdown Elements","content":"# Markdown Elements\n\nText can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\n\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\n\n> There should be no margin above this first sentence.\n>\n> Blockquotes should be a lighter gray with a gray border along the left side.\n>\n> There should be no margin below this final sentence.\n\n# Header 1\n\nThis is a normal paragraph following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\n\n## Header 2\n\n> This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\n\n### Header 3\n\n```\nThis is a code block following a header.\n```\n\n#### Header 4\n\n- This is an unordered list following a header.\n- This is an unordered list following a header.\n- This is an unordered list following a header.\n\n##### Header 5\n\n1. This is an ordered list following a header.\n2. This is an ordered list following a header.\n3. This is an ordered list following a header.\n\n###### Header 6\n\n| What | Follows |\n| ------- | -------- |\n| A table | A header |\n| A table | A header |\n| A table | A header |\n\n---\n\nThere's a horizontal rule above and below this.\n\n---\n\nHere is an unordered list:\n\n- Salt-n-Pepa\n- Bel Biv DeVoe\n- Kid 'N Play\n\nAnd an ordered list:\n\n1. Michael Jackson\n2. Michael Bolton\n3. Michael Bublé\n\nAnd an unordered task list:\n\n- [x] Create a sample markdown document\n- [x] Add task lists to it\n- [ ] Take a vacation\n\nAnd a \"mixed\" task list:\n\n- [ ] Steal underpants\n- ?\n- [ ] Profit!\n\nAnd a nested list:\n\n- Jackson 5\n - Michael\n - Tito\n - Jackie\n - Marlon\n - Jermaine\n- TMNT\n - Leonardo\n - Michelangelo\n - Donatello\n - Raphael\n\nDefinition lists can be used with HTML syntax. Definition terms are bold and italic.\n\n<dl>\n <dt>Name</dt>\n <dd>Godzilla</dd>\n <dt>Born</dt>\n <dd>1952</dd>\n <dt>Birthplace</dt>\n <dd>Japan</dd>\n <dt>Color</dt>\n <dd>Green</dd>\n</dl>\n\n---\n\nTables should have bold headings and alternating shaded rows.\n\n| Artist | Album | Year |\n| --------------- | -------------- | ---- |\n| Michael Jackson | Thriller | 1982 |\n| Prince | Purple Rain | 1984 |\n| Beastie Boys | License to Ill | 1986 |\n\nIf a table is too wide, it should condense down and/or scroll horizontally.\n\n<!-- prettier-ignore-start -->\n\n| Artist | Album | Year | Label | Awards | Songs |\n|-------------------|-----------------|------|-------------|----------|-----------|\n| Michael Jackson | Thriller | 1982 | Epic Records | Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical | Wanna Be Startin' Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life |\n| Prince | Purple Rain | 1984 | Warner Brothers Records | Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal | Let's Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I'm a Star, Purple Rain |\n| Beastie Boys | License to Ill | 1986 | Mercury Records | noawardsbutthistablecelliswide | Rhymin & Stealin, The New Style, She's Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill |\n\n<!-- prettier-ignore-end -->\n\n---\n\nCode snippets like `var foo = \"bar\";` can be shown inline.\n\nAlso, `this should vertically align` ~~`with this`~~ ~~and this~~.\n\nCode can also be shown in a block element.\n\n```\nvar foo = \"bar\";\n```\n\nCode can also use syntax highlighting.\n\n```javascript\nvar foo = \"bar\";\n```\n\n```\nLong, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.\n```\n\n```javascript\nvar foo =\n \"The same thing is true for code with syntax highlighting. A single line of code should horizontally scroll if it is really long.\";\n```\n\nInline code inside table cells should still be distinguishable.\n\n| Language | Code |\n| ---------- | ------------------ |\n| Javascript | `var foo = \"bar\";` |\n| Ruby | `foo = \"bar\"` |\n\n---\n\nSmall images should be shown at their actual size.\n\n![Octocat](https://github.githubassets.com/images/icons/emoji/octocat.png)\n\nLarge images should always scale down and fit in the content container.\n\n![Branching](https://guides.github.com/activities/hello-world/branching.png)\n\n```\nThis is the final element on the page and there should be no margin below this.\n```\n","dir":"/history/test/","name":"markdown.md","path":"history/test/markdown.md","url":"/history/test/markdown.html"},{"sort":1,"permalink":"/linux/","layout":"default","title":"linux","content":"<h1 id=\"linux\">linux</h1>\n\n<ul>\n <li><a href=\"/linux/ubuntu/\">ubuntu</a>\n <ul>\n <li><a href=\"/linux/ubuntu/%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%E5%AE%89%E8%A3%85.html\">图形化界面安装.md</a></li>\n </ul>\n </li>\n</ul>\n","dir":"/linux/","name":"README.md","path":"linux/README.md","url":"/linux/"},{"sort":2,"permalink":"/history/","layout":"default","title":"histroy","content":"<h1 id=\"histroy\">histroy</h1>\n\n<ul>\n <li><a href=\"/history/test/\">Test Documentation</a>\n <ul>\n <li><a href=\"/history/test/markdown.html\">Markdown Elements</a></li>\n <li><a href=\"/history/test/toasts.html\">Toasts Card</a></li>\n <li><a href=\"/history/test/codes.html\">Code Blocks</a></li>\n <li><a href=\"/history/test/mermaid.html\">Mermaid Test</a></li>\n <li><a href=\"/history/test/emoji.html\">Emoji Test</a></li>\n <li><a href=\"/history/test/gist.html\">Gist Test</a></li>\n <li><a href=\"/history/test/avatar.html\">Avatar Test</a></li>\n <li><a href=\"/history/test/mentions.html\">Mentions Test</a></li>\n <li><a href=\"/history/test/fonts.html\">Fonts Test</a></li>\n <li><a href=\"/history/test/mathjax.html\">Mathjax Test</a></li>\n <li><a href=\"/history/test/utilities.html\">Primer Utilities Test</a></li>\n </ul>\n </li>\n <li><a href=\"/history/test_long/\">This is an incredibly long caption for a long menu</a>\n <ul>\n <li><a href=\"/history/test_long/folder1/\">I’m folder1</a>\n <ul>\n <li><a href=\"/history/test_long/folder1/file1.html\">file1</a></li>\n <li><a href=\"/history/test_long/folder1/file3.html\">file3</a></li>\n <li><a href=\"/history/test_long/folder1/file2.html\">file2</a></li>\n <li><a href=\"/history/test_long/folder1/folder2/\">I’m folder2</a>\n <ul>\n <li><a href=\"/history/test_long/folder1/folder2/file3.html\">file3</a></li>\n <li><a href=\"/history/test_long/folder1/folder2/file2.html\">file2</a></li>\n <li><a href=\"/history/test_long/folder1/folder2/file1.html\">file1</a></li>\n <li><a href=\"/history/test_long/folder1/folder2/folder1/\">I’m folder1</a>\n <ul>\n <li><a href=\"/history/test_long/folder1/folder2/folder1/file3.html\">file3</a></li>\n <li><a href=\"/history/test_long/folder1/folder2/folder1/file2.html\">file2</a></li>\n <li><a href=\"/history/test_long/folder1/folder2/folder1/file1.html\">file1</a></li>\n </ul>\n </li>\n </ul>\n </li>\n </ul>\n </li>\n <li><a href=\"/history/test_long/folder2/\">I’m folder2</a>\n <ul>\n <li><a href=\"/history/test_long/folder2/file3.html\">file3</a></li>\n <li><a href=\"/history/test_long/folder2/file2.html\">file2</a></li>\n <li><a href=\"/history/test_long/folder2/file1.html\">file1</a></li>\n <li><a href=\"/history/test_long/folder2/folder1/\">I’m folder1</a>\n <ul>\n <li><a href=\"/history/test_long/folder2/folder1/file3.html\">file3</a></li>\n <li><a href=\"/history/test_long/folder2/folder1/file2.html\">file2</a></li>\n <li><a href=\"/history/test_long/folder2/folder1/file1.html\">file1</a></li>\n </ul>\n </li>\n </ul>\n </li>\n </ul>\n </li>\n</ul>\n","dir":"/history/","name":"README.md","path":"history/README.md","url":"/history/"},{"sort":2,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=2 lang=cpp\n *\n * [2] 两数相加\n */\n\n// @lc code=start\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n * int val;\n * ListNode *next;\n * ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n ListNode* insert(ListNode *pos, int data) {\n ListNode* node = new ListNode(data);\n if (pos == NULL)\n return node;\n\n pos->next = node;\n return node;\n }\n\n void freeList(ListNode* l) {\n if (l != NULL)\n freeList(l->next);\n\n delete l;\n }\n\n ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n int carry = 0;\n ListNode* head = NULL, * tail = NULL;\n\n while (1) {\n if (l1 == NULL || l2 == NULL) {\n break;\n }\n\n int c = l1->val + l2->val + carry;\n if (c >= 10) {\n c -= 10;\n carry = 1;\n }\n else {\n carry = 0;\n }\n\n tail = insert(tail, c);\n if (head == NULL)\n head = tail;\n\n l1 = l1->next;\n l2 = l2->next;\n }\n\n while (l1 != NULL) {\n int c = l1->val + carry;\n if (c >= 10) {\n c -= 10;\n carry = 1;\n }\n else {\n carry = 0;\n }\n\n tail = insert(tail, c);\n if (head == NULL)\n head = tail;\n \n l1 = l1->next;\n }\n\n while (l2 != NULL) {\n int c = l2->val + carry;\n if (c >= 10) {\n c -= 10;\n carry = 1;\n }\n else {\n carry = 0;\n }\n\n tail = insert(tail, c);\n if (head == NULL)\n head = tail;\n \n l2 = l2->next;\n }\n\n if (carry > 0) {\n tail = insert(tail, 1);\n if (head == NULL)\n head = tail;\n\n }\n\n return head;\n\n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"两数相加.md","path":"algorithm/leetcode/两数相加.md","url":"/algorithm/leetcode/%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0.html"},{"sort":2,"layout":"default","title":"Toasts Card","content":"# Toasts Card\n\nTHIS IS TOO LONG, NEED UPDATE! HERE IS SOME IDEAS:\n\n- https://primer.style/css/components/box\n- https://primer.style/css/components/toasts\n\n```note\n## This is a note\n\nMarkdown is supported, Text can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines\n\n`inline code`\n\n[`inline code inside link`](./)\n```\n\n```note\nThis is note2\n```\n\n```note\nThis is note3\n```\n\n```tip\nIt’s bigger than a bread box.\n```\n\n```tip\nIt’s tip 2\n```\n\n```warning\nStrong prose may provoke extreme mental exertion. Reader discretion is strongly advised.\n```\n\n```danger\nMad scientist at work!\n```\n","dir":"/history/test/","name":"toasts.md","path":"history/test/toasts.md","url":"/history/test/toasts.html"},{"sort":2,"permalink":"/history/test_long/","layout":"default","title":"This is an incredibly long caption for a long menu","content":"<h1 id=\"this-is-an-incredibly-long-caption-for-a-long-menu\">This is an incredibly long caption for a long menu</h1>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid all=true %}\n\n\n- [I’m folder1](/history/test_long/folder1/)\n    - [file1](/history/test_long/folder1/file1.html)\n    - [file3](/history/test_long/folder1/file3.html)\n    - [file2](/history/test_long/folder1/file2.html)\n    - [I’m folder2](/history/test_long/folder1/folder2/)\n        - [file3](/history/test_long/folder1/folder2/file3.html)\n        - [file2](/history/test_long/folder1/folder2/file2.html)\n        - [file1](/history/test_long/folder1/folder2/file1.html)\n        - [I’m folder1](/history/test_long/folder1/folder2/folder1/)\n            - [file3](/history/test_long/folder1/folder2/folder1/file3.html)\n            - [file2](/history/test_long/folder1/folder2/folder1/file2.html)\n            - [file1](/history/test_long/folder1/folder2/folder1/file1.html)\n- [I’m folder2](/history/test_long/folder2/)\n    - [file3](/history/test_long/folder2/file3.html)\n    - [file2](/history/test_long/folder2/file2.html)\n    - [file1](/history/test_long/folder2/file1.html)\n    - [I’m folder1](/history/test_long/folder2/folder1/)\n        - [file3](/history/test_long/folder2/folder1/file3.html)\n        - [file2](/history/test_long/folder2/folder1/file2.html)\n        - [file1](/history/test_long/folder2/folder1/file1.html)\n</code></pre>  </div></div>\n\n<ul>\n <li><a href=\"/history/test_long/folder1/\">I’m folder1</a>\n <ul>\n <li><a href=\"/history/test_long/folder1/file1.html\">file1</a></li>\n <li><a href=\"/history/test_long/folder1/file3.html\">file3</a></li>\n <li><a href=\"/history/test_long/folder1/file2.html\">file2</a></li>\n <li><a href=\"/history/test_long/folder1/folder2/\">I’m folder2</a>\n <ul>\n <li><a href=\"/history/test_long/folder1/folder2/file3.html\">file3</a></li>\n <li><a href=\"/history/test_long/folder1/folder2/file2.html\">file2</a></li>\n <li><a href=\"/history/test_long/folder1/folder2/file1.html\">file1</a></li>\n <li><a href=\"/history/test_long/folder1/folder2/folder1/\">I’m folder1</a>\n <ul>\n <li><a href=\"/history/test_long/folder1/folder2/folder1/file3.html\">file3</a></li>\n <li><a href=\"/history/test_long/folder1/folder2/folder1/file2.html\">file2</a></li>\n <li><a href=\"/history/test_long/folder1/folder2/folder1/file1.html\">file1</a></li>\n </ul>\n </li>\n </ul>\n </li>\n </ul>\n </li>\n <li><a href=\"/history/test_long/folder2/\">I’m folder2</a>\n <ul>\n <li><a href=\"/history/test_long/folder2/file3.html\">file3</a></li>\n <li><a href=\"/history/test_long/folder2/file2.html\">file2</a></li>\n <li><a href=\"/history/test_long/folder2/file1.html\">file1</a></li>\n <li><a href=\"/history/test_long/folder2/folder1/\">I’m folder1</a>\n <ul>\n <li><a href=\"/history/test_long/folder2/folder1/file3.html\">file3</a></li>\n <li><a href=\"/history/test_long/folder2/folder1/file2.html\">file2</a></li>\n <li><a href=\"/history/test_long/folder2/folder1/file1.html\">file1</a></li>\n </ul>\n </li>\n </ul>\n </li>\n</ul>\n","dir":"/history/test_long/","name":"README.md","path":"history/test_long/README.md","url":"/history/test_long/"},{"sort":3,"layout":"default","title":"Code Blocks","content":"<h1 id=\"code-blocks\">Code Blocks</h1>\n\n<p><code class=\"language-plaintext highlighter-rouge\">inline code</code></p>\n\n<p><a href=\"./\"><code class=\"language-plaintext highlighter-rouge\">inline code inside link</code></a></p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>:root {\n  @for $level from 1 through 12 {\n    @if $level % 4 == 0 {\n      --toc-#{$level}: #{darken($theme-white, 4 * 8.8%)};\n    } @else {\n      --toc-#{$level}: #{darken($theme-white, $level % 4 * 8.8%)};\n    }\n  }\n}\n</code></pre>  </div></div>\n\n<p><strong>Highlight:</strong></p>\n\n<div class=\"language-scss highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">:root</span> <span class=\"p\">{</span>\n  <span class=\"k\">@for</span> <span class=\"nv\">$level</span> <span class=\"ow\">from</span> <span class=\"m\">1</span> <span class=\"ow\">through</span> <span class=\"m\">12</span> <span class=\"p\">{</span>\n    <span class=\"k\">@if</span> <span class=\"nv\">$level</span> <span class=\"o\">%</span> <span class=\"m\">4</span> <span class=\"o\">==</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n      <span class=\"nt\">--toc-</span><span class=\"si\">#{</span><span class=\"nv\">$level</span><span class=\"si\">}</span><span class=\"nd\">:</span> <span class=\"si\">#{</span><span class=\"nf\">darken</span><span class=\"p\">(</span><span class=\"nv\">$theme-white</span><span class=\"o\">,</span> <span class=\"m\">4</span> <span class=\"o\">*</span> <span class=\"m\">8</span><span class=\"mi\">.8%</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span> <span class=\"k\">@else</span> <span class=\"p\">{</span>\n      <span class=\"nt\">--toc-</span><span class=\"si\">#{</span><span class=\"nv\">$level</span><span class=\"si\">}</span><span class=\"nd\">:</span> <span class=\"si\">#{</span><span class=\"nf\">darken</span><span class=\"p\">(</span><span class=\"nv\">$theme-white</span><span class=\"o\">,</span> <span class=\"nv\">$level</span> <span class=\"o\">%</span> <span class=\"m\">4</span> <span class=\"o\">*</span> <span class=\"m\">8</span><span class=\"mi\">.8%</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>  </div></div>\n","dir":"/history/test/","name":"codes.md","path":"history/test/codes.md","url":"/history/test/codes.html"},{"sort":3,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=3 lang=cpp\n *\n * [3] 无重复字符的最长子串\n */\n\n// @lc code=start\nclass Solution {\npublic:\n int lengthOfLongestSubstring(string s) {\n \n int l = 0;\n int r = 0;\n int max = 0;\n \n char c[255] = {0};\n \n for (r = 0; r < s.length(); ++r) {\n if (c[s[r]] == 0) {\n c[s[r]]++;\n } else {\n for (int k = l; k < r; ++k) {\n if (s[k] == s[r]) {\n ++l;\n break;\n }\n c[s[l]]--;\n ++l; \n }\n }\n \n max = std::max(max, r - l + 1);\n \n }\n \n return max;\n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"无重复字符的最长子串.md","path":"algorithm/leetcode/无重复字符的最长子串.md","url":"/algorithm/leetcode/%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2.html"},{"sort":3,"permalink":"/ros/","layout":"default","title":"ROS","content":"<h1 id=\"ros\">ROS</h1>\n\n<ul>\n <li><a href=\"/ros/install.html\">install</a></li>\n</ul>\n\n","dir":"/ros/","name":"README.md","path":"ros/README.md","url":"/ros/"},{"sort":4,"permalink":"/dp/","layout":"default","title":"设计模式","content":"<h1 id=\"设计模式\">设计模式</h1>\n\n","dir":"/dp/","name":"README.md","path":"dp/README.md","url":"/dp/"},{"sort":4,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=4 lang=cpp\n *\n * [4] 寻找两个正序数组的中位数\n */\n\n// @lc code=start\nclass Solution {\npublic:\n double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {\n vector<int> v;\n v.insert(v.end(), nums1.begin(), nums1.end());\n v.insert(v.end(), nums2.begin(), nums2.end());\n sort(v.begin(), v.end());\n \n if (v.size() % 2 == 0) {\n return (double)(v[v.size() / 2 - 1] + v[v.size() / 2]) / 2;\n } else {\n return v[v.size() / 2];\n }\n \n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"寻找两个正序数组的中位数.md","path":"algorithm/leetcode/寻找两个正序数组的中位数.md","url":"/algorithm/leetcode/%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%AD%A3%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0.html"},{"sort":4,"layout":"default","title":"Mermaid Test","content":"# Mermaid Test\n\n ```mermaid\n graph TB\n c1-->a2\n subgraph one\n a1-->a2\n end\n subgraph two\n b1-->b2\n end\n subgraph three\n c1-->c2\n end\n ```\n\n```mermaid\ngraph TB\n c1-->a2\n subgraph one\n a1-->a2\n end\n subgraph two\n b1-->b2\n end\n subgraph three\n c1-->c2\n end\n```\n\n```mermaid\ngraph TD;\n A-->B;\n A-->C;\n B-->D;\n C-->D;\n```\n\n```mermaid\nclassDiagram\nclassA <|-- classB\nclassC *-- classD\nclassE o-- classF\nclassG <-- classH\nclassI -- classJ\nclassK <.. classL\nclassM <|.. classN\nclassO .. classP\n```\n\n```mermaid\nerDiagram\n CUSTOMER ||--o{ ORDER : places\n ORDER ||--|{ LINE-ITEM : contains\n CUSTOMER }|..|{ DELIVERY-ADDRESS : uses\n```\n","dir":"/history/test/","name":"mermaid.md","path":"history/test/mermaid.md","url":"/history/test/mermaid.html"},{"sort":5,"layout":"default","title":"Emoji Test","content":"# Emoji Test\n\n```\nI give this theme two :+1:!\n```\n\nI give this theme two :+1:!\n\n```tip\nSet config `plugins: [jemoji]`, Emoji searcher, see: [https://emoji.muan.co/](https://emoji.muan.co/)\n```\n","dir":"/history/test/","name":"emoji.md","path":"history/test/emoji.md","url":"/history/test/emoji.html"},{"sort":5,"permalink":"/tensorflow/","layout":"default","title":"tensorflow","content":"<h1 id=\"tensorflow\">tensorflow</h1>\n\n<ul>\n <li><a href=\"/tensorflow/numpy.html\">numpy.md</a></li>\n <li><a href=\"/tensorflow/install.html\">install</a></li>\n</ul>\n","dir":"/tensorflow/","name":"README.md","path":"tensorflow/README.md","url":"/tensorflow/"},{"sort":5,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=5 lang=cpp\n *\n * [5] 最长回文子串\n */\n\n// @lc code=start\nclass Solution {\npublic:\n string longestPalindrome(string s) {\n vector<vector<int>> dp(s.length(), vector<int>(s.length(), 0));\n \n int length = 1;\n int begin = 0;\n for (int j = 0; j < s.length(); ++j) {\n dp[j][j] = 1;\n }\n \n for (int j = 1; j < s.length(); ++j) {\n if (s[j] == s[j - 1]) {\n dp[j - 1][j] = 1;\n begin = j - 1;\n length = 2;\n }\n }\n \n \n for (int i = 3; i <= s.length(); ++i) {\n for (int j = 0; j + i <= s.length(); ++j) {\n int end = j + i - 1;\n if (dp[j + 1][end - 1] && s[j] == s[end]) {\n dp[j][end] = 1;\n length = i;\n begin = j;\n }\n }\n }\n \n return s.substr(begin, length);\n \n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"最长回文子串.md","path":"algorithm/leetcode/最长回文子串.md","url":"/algorithm/leetcode/%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2.html"},{"sort":6,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=6 lang=cpp\n *\n * [6] Z 字形变换\n */\n\n// @lc code=start\nclass Solution {\npublic:\n string convert(string s, int numRows) {\n vector<string> ret(numRows, string(\"\"));\n int j = 0;\n \n \n while (j < s.length()) {\n for (int i = 0; i < numRows && j < s.length(); ++i) {\n //ret[i].append(string(1, s[j++]));\n ret[i].push_back(s[j++]);\n //cout << \"11:\" << i << \" \" << j << \" \" << ret[i] << endl;\n }\n\n for (int i = numRows - 2; i > 0 && j < s.length(); i--) {\n ret[i].push_back(s[j++]);\n //cout << \"22:\" << i << \" \" << j << \" \" << ret[i] << endl;\n }\n }\n \n string r;\n for (int i = 0; i < numRows; ++i) {\n r += ret[i];\n }\n \n return r;\n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"z-字形变换.md","path":"algorithm/leetcode/z-字形变换.md","url":"/algorithm/leetcode/z-%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2.html"},{"sort":6,"layout":"default","title":"Gist Test","content":"# Gist Test\n\n```\n{% raw %}{% gist c08ee0f2726fd0e3909d %}{% endraw %}\n```\n\n{% gist c08ee0f2726fd0e3909d %}\n","dir":"/history/test/","name":"gist.md","path":"history/test/gist.md","url":"/history/test/gist.html"},{"sort":7,"layout":"default","title":"Avatar Test","content":"<h1 id=\"avatar-test\">Avatar Test</h1>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% avatar saowang %}\n</code></pre>  </div></div>\n\n<p><img class=\"avatar avatar-small\" alt=\"saowang\" width=\"40\" height=\"40\" data-proofer-ignore=\"true\" src=\"https://avatars1.githubusercontent.com/saowang?v=3&amp;s=40\" srcset=\"https://avatars1.githubusercontent.com/saowang?v=3&amp;s=40 1x, https://avatars1.githubusercontent.com/saowang?v=3&amp;s=80 2x, https://avatars1.githubusercontent.com/saowang?v=3&amp;s=120 3x, https://avatars1.githubusercontent.com/saowang?v=3&amp;s=160 4x\" /></p>\n\n<pre><code class=\"language-tip\">Set config `plugins: [jekyll-avatar]`\n\nFor documentation, see: [https://github.com/benbalter/jekyll-avatar](https://github.com/benbalter/jekyll-avatar)\n</code></pre>  \n","dir":"/history/test/","name":"avatar.md","path":"history/test/avatar.md","url":"/history/test/avatar.html"},{"sort":7,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=7 lang=cpp\n *\n * [7] 整数反转\n */\n\n// @lc code=start\nclass Solution {\npublic:\n int reverse(int x) {\n long long y = x;\n int flag = 0;\n if (x < 0) {\n flag = 1;\n y = -y;\n }\n \n long long ret = 0;\n while (y != 0) {\n ret = ret * 10 + y % 10;\n y /= 10;\n }\n \n if (flag) {\n ret = -ret;\n }\n \n if (ret > INT_MAX || ret < INT_MIN) {\n return 0;\n }\n \n return ret;\n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"整数反转.md","path":"algorithm/leetcode/整数反转.md","url":"/algorithm/leetcode/%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC.html"},{"sort":8,"layout":"default","title":"Mentions Test","content":"# Mentions Test\n\n```\nHey @saowang, what do you think of this?\n```\n\nHey @saowang, what do you think of this?\n\n```tip\nSet config `plugins: [jekyll-mentions]`\n\nFor documentation, see: [https://github.com/jekyll/jekyll-mentions](https://github.com/jekyll/jekyll-mentions)\n```\n","dir":"/history/test/","name":"mentions.md","path":"history/test/mentions.md","url":"/history/test/mentions.html"},{"sort":8,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=8 lang=cpp\n *\n * [8] 字符串转换整数 (atoi)\n */\n\n// @lc code=start\nclass Solution {\npublic:\n int myAtoi(string str) {\n int idx = 0;\n \n long long val = 0;\n \n char flag = 0;\n int start = 0;\n for (; idx < str.length(); ++idx) {\n if (str[idx] == ' ') {\n if (start) {\n return 0;\n }\n continue;\n }\n if (str[idx] == '+') {\n if (start == 0) {\n start = 1;\n continue;\n }\n \n return 0; \n }\n if (str[idx] == '-') {\n if (start == 0) {\n start = 1;\n flag = 1;\n continue;\n }\n \n return 0;\n }\n \n if (str[idx] >= '0' && str[idx] <= '9') {\n break;\n }\n \n return 0;\n }\n \n for (; idx < str.length(); ++idx) {\n if (str[idx] >= '0' && str[idx] <= '9') {\n val = val * 10 + str[idx] - '0';\n if (val > INT_MAX) {\n if (flag)\n return INT_MIN;\n else \n return INT_MAX;\n }\n continue;\n }\n \n break;\n }\n \n if (flag) {\n val = -val;\n }\n \n \n return val;\n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"字符串转换整数-atoi.md","path":"algorithm/leetcode/字符串转换整数-atoi.md","url":"/algorithm/leetcode/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0-atoi.html"},{"sort":9,"text":"ABCDEFGHIJKLMNOPQRSTUVWXYZ\nabcdefghijklmnopqrstuvwxyz\n1234567890\n一二三四五六七八九十百千萬上中下左右大小春夏秋冬東南西北金木水火土\n‘?’“!”(%)[#]{@}/&\\<-+÷×=>®©$€£¥¢:;,.*\n","layout":"default","title":"Fonts Test","content":"# Fonts Test\n\n`{:.font-mono}`\n\n```\n{{ page.text -}}\n```\n\n`{:.font-body}`\n\n{:.font-body}\n{{ page.text }}\n\n`{:.font-head}`\n\n{:.font-head}\n{{ page.text }}\n\n## font-awesome\n\n```html\n<i class=\"fa fa-check-circle text-green\">checked</i>\n<i class=\"fa fa-battery-quarter text-red\">battery</i>\n```\n\n<i class=\"fa fa-check-circle text-green\">checked</i>\n<i class=\"fa fa-battery-quarter text-red\">battery</i>\n","dir":"/history/test/","name":"fonts.md","path":"history/test/fonts.md","url":"/history/test/fonts.html"},{"sort":9,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=9 lang=cpp\n *\n * [9] 回文数\n */\n\n// @lc code=start\nclass Solution {\npublic:\n bool isPalindrome(int x) {\n int data[13];\n int i = 0;\n if (x < 0) {\n return false;\n }\n while (x != 0) {\n data[i++] = x % 10;\n x /= 10;\n }\n \n int m = 0;\n int n = i - 1;\n while (m < n) {\n if (data[m] != data[n]) {\n return false;\n }\n ++m;\n --n;\n \n }\n \n return true;\n \n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"回文数.md","path":"algorithm/leetcode/回文数.md","url":"/algorithm/leetcode/%E5%9B%9E%E6%96%87%E6%95%B0.html"},{"sort":10,"layout":"default","title":"Mathjax Test","content":"# Mathjax Test\n\n$$\n\\begin{aligned}\n & \\phi(x,y) = \\phi \\left(\\sum_{i=1}^n x_ie_i, \\sum_{j=1}^n y_je_j \\right)\n = \\sum_{i=1}^n \\sum_{j=1}^n x_i y_j \\phi(e_i, e_j) = \\\\\n & (x_1, \\ldots, x_n) \\left( \\begin{array}{ccc}\n \\phi(e_1, e_1) & \\cdots & \\phi(e_1, e_n) \\\\\n \\vdots & \\ddots & \\vdots \\\\\n \\phi(e_n, e_1) & \\cdots & \\phi(e_n, e_n)\n \\end{array} \\right)\n \\left( \\begin{array}{c}\n y_1 \\\\\n \\vdots \\\\\n y_n\n \\end{array} \\right)\n\\end{aligned}\n$$\n\n```note\nFor documentation, see: https://kramdown.gettalong.org/syntax.html#math-blocks\n```\n","dir":"/history/test/","name":"mathjax.md","path":"history/test/mathjax.md","url":"/history/test/mathjax.html"},{"sort":10,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=10 lang=cpp\n *\n * [10] 正则表达式匹配\n */\n\n// @lc code=start\nclass Solution {\npublic:\n bool isMatch(string s, string p) {\n vector<vector<int>> dp(s.length() + 1, vector<int>(p.length() + 1, 0));\n dp[0][0] = 1;\n for(int i = 2; i <= p.length(); ++i) {\n dp[0][i] = p[i - 1] == '*' && dp[0][i - 2];\n }\n \n for (int i = 1; i <= s.length(); ++i) {\n for (int j = 1; j <= p.length(); ++j) {\n if (s[i - 1] == p[j - 1] || p[j - 1] == '.') {\n dp[i][j] = dp[i - 1][j - 1];\n } else if (p[j - 1] == '*') {\n dp[i][j] = dp[i][j - 1];\n if (j >= 2) {\n dp[i][j] |= dp[i][j - 2];\n \n if (s[i - 1] == p[j - 2] || (p[j - 2] == '.')) {\n dp[i][j] |= dp[i - 1][j - 1] | dp[i - 1][j] ;\n }\n }\n \n }\n //cout << \"i:\" << i << \"j:\" << j << \" \" << dp[i][j] << endl;\n }\n \n }\n return dp[s.length()][p.length()];\n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"正则表达式匹配.md","path":"algorithm/leetcode/正则表达式匹配.md","url":"/algorithm/leetcode/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D.html"},{"sort":11,"layout":"default","title":"Primer Utilities Test","content":"# Primer Utilities Test\n\nText can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.text-red}\nText can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.bg-yellow-dark}\nText can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.bg-yellow-dark.text-white}\nText can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.bg-yellow-dark.text-white.m-5}\nText can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.bg-yellow-dark.text-white.p-5.mb-6}\nText can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.bg-yellow-dark.text-white.p-5.mb-6}\nText can be **bold**{:.h1}, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.bg-yellow-dark.text-white.p-2.box-shadow-large}\nText can be **bold**{:.h1}, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.bg-yellow-dark.text-white.p-5.box-shadow-large.anim-pulse}\nText can be **bold**{:.h1}, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n```tip\nEdit this page to see how to add this to your docs, theme can use [@primer/css utilities](https://primer.style/css/utilities)\n```\n","dir":"/history/test/","name":"utilities.md","path":"history/test/utilities.md","url":"/history/test/utilities.html"},{"sort":11,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=11 lang=cpp\n *\n * [11] 盛最多水的容器\n */\n\n// @lc code=start\nclass Solution {\npublic:\n int maxArea(vector<int>& height) {\n int i = 0;\n int j = height.size() - 1;\n\n long long max = 0;\n while (i < j) {\n if (height[i] < height[j]) {\n max = std::max(max, (long long)height[i] * (j - i));\n ++i;\n } else {\n max = std::max(max, (long long)height[j] * (j - i));\n --j;\n }\n }\n\n return max;\n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"盛最多水的容器.md","path":"algorithm/leetcode/盛最多水的容器.md","url":"/algorithm/leetcode/%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8.html"},{"sort":12,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=12 lang=cpp\n *\n * [12] 整数转罗马数字\n */\n\n// @lc code=start\nclass Solution {\npublic:\n string intToRoman(int num) {\n string ret;\n \n string s[] = {\n \"\",\n \"M\",\n \"MM\",\n \"MMM\"\n };\n \n string h[] = {\n \"\",\n \"C\",\n \"CC\",\n \"CCC\",\n \"CD\",\n \"D\",\n \"DC\",\n \"DCC\",\n \"DCCC\",\n \"CM\"\n };\n \n string t[] = {\n \"\",\n \"X\",\n \"XX\",\n \"XXX\",\n \"XL\",\n \"L\",\n \"LX\",\n \"LXX\",\n \"LXXX\",\n \"XC\"\n };\n \n string d[] = {\n \"\",\n \"I\",\n \"II\",\n \"III\",\n \"IV\",\n \"V\",\n \"VI\",\n \"VII\",\n \"VIII\",\n \"IX\"\n };\n \n \n \n int tmp = num / 1000;\n num %= 1000;\n \n ret.append(s[tmp]);\n \n \n tmp = num / 100;\n num %= 100;\n \n ret.append(h[tmp]);\n \n tmp = num / 10;\n num %= 10;\n \n ret.append(t[tmp]);\n \n ret.append(d[num]);\n \n return ret;\n \n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"整数转罗马数字.md","path":"algorithm/leetcode/整数转罗马数字.md","url":"/algorithm/leetcode/%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97.html"},{"sort":13,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=13 lang=cpp\n *\n * [13] 罗马数字转整数\n */\n\n// @lc code=start\nclass Solution {\npublic:\n int romanToInt(string s) {\n int ret = 0;\n for (int i = 0; i < s.length(); ++i) {\n if (s[i] == 'M') {\n ret += 1000;\n } else if (s[i] == 'D') {\n ret += 500;\n } else if (s[i] == 'L') {\n ret += 50;\n } else if (s[i] == 'V') {\n ret += 5;\n } else if (s[i] == 'I') {\n if (i < (s.length() - 1)) {\n if (s[i + 1] == 'V') {\n ret += 4;\n ++i;\n continue;\n } else if (s[i + 1] == 'X') {\n ret += 9;\n ++i;\n continue;\n \n }\n }\n \n ret += 1;\n } else if (s[i] == 'X') {\n if (i < (s.length() - 1)) {\n if (s[i + 1] == 'L') {\n ret += 40;\n ++i;\n continue;\n } else if (s[i + 1] == 'C') {\n ret += 90;\n ++i;\n continue;\n \n }\n }\n \n ret += 10;\n } else if (s[i] == 'C') {\n if (i < (s.length() - 1)) {\n if (s[i + 1] == 'D') {\n ret += 400;\n ++i;\n continue;\n } else if (s[i + 1] == 'M') {\n ret += 900;\n ++i;\n continue;\n \n }\n }\n \n ret += 100;\n }\n } \n \n return ret;\n \n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"罗马数字转整数.md","path":"algorithm/leetcode/罗马数字转整数.md","url":"/algorithm/leetcode/%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0.html"},{"sort":14,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=14 lang=cpp\n *\n * [14] 最长公共前缀\n */\n\n// @lc code=start\nclass Solution {\npublic:\n string longestCommonPrefix(vector<string>& strs) {\n if (strs.size() == 0) {\n return \"\";\n }\n\n sort(strs.begin(), strs.end());\n\n for (int i = 0; i < strs[0].length(); ++i) {\n for (int j = 1; j < strs.size(); ++j) {\n if (strs[0][i] != strs[j][i]) {\n return strs[0].substr(0, i);\n }\n }\n }\n\n return strs[0];\n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"最长公共前缀.md","path":"algorithm/leetcode/最长公共前缀.md","url":"/algorithm/leetcode/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80.html"},{"sort":15,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=18 lang=cpp\n *\n * [18] 四数之和\n */\n\n// @lc code=start\nclass Solution {\npublic:\n void fourSum(vector<vector<int>> &ret, vector<int>& nums, int target, int i, int j) {\n target -= nums[i];\n for (int m = i + 1; m <=j; ++m) {\n int t = target - nums[m];\n int l = m + 1;\n int r = j;\n\n if (m > i + 1 && nums[m] == nums[m - 1]) {\n continue;\n }\n //cout << i << \" \" << m << \" \" << l << \" \" << r << endl;\n while (l < r) {\n if ((nums[l] + nums[r]) < t) ++l;\n else if ((nums[l] + nums[r]) > t) --r;\n else {\n ret.push_back(vector<int>{nums[i], nums[m], nums[l], nums[r]});\n while(l < r && nums[l] == nums[l + 1]) ++l;\n while(l < r && nums[r] == nums[r - 1]) --r;\n ++l; --r;\n }\n\n }\n }\n }\n\n vector<vector<int>> fourSum(vector<int>& nums, int target) {\n vector<vector<int>> ret;\n\n sort(nums.begin(), nums.end());\n for (int i = 0; i < nums.size(); ++i) {\n fourSum(ret, nums, target, i, nums.size() - 1);\n }\n sort(ret.begin(), ret.end());\n ret.erase(unique(ret.begin(), ret.end()), ret.end());\n\n return ret;\n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"三数之和.md","path":"algorithm/leetcode/三数之和.md","url":"/algorithm/leetcode/%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C.html"},{"sort":16,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=16 lang=cpp\n *\n * [16] 最接近的三数之和\n */\n\n// @lc code=start\nclass Solution {\npublic:\n int threeSumClosest(vector<int>& nums, int target) {\n sort(nums.begin(), nums.end());\n\n long long ans = INT_MAX;\n for (int i = 0; i < nums.size(); ++i) {\n int l = i + 1;\n int r = nums.size() - 1;\n\n while (l < r) {\n int ret = nums[i] + nums[l] + nums[r];\n if (ret == target) {\n return target;\n }\n\n if (abs(ret - target) < abs(ans - target)) {\n ans = ret;\n }\n\n if (ret > target) {\n --r;\n } else {\n ++l;\n }\n }\n }\n\n return ans;\n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"最接近的三数之和.md","path":"algorithm/leetcode/最接近的三数之和.md","url":"/algorithm/leetcode/%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C.html"},{"sort":17,"layout":"default","title":null,"content":"```\nclass Solution {\npublic:\n vector<string> m = {\"\", \"\" ,\"abc\", \"def\", \"ghi\", \"jkl\", \"mno\", \"pqrs\", \"tuv\", \"wxxyz\"};\n void proc(set<string> &ret, string &curr, string &digit, int begin, int end)\n {\n //cout << curr << begin << \" \" << curr.length() << \" \" << digit.length() << endl;\n if (curr.length() == digit.length()) {\n ret.insert(curr);\n return;\n }\n\n if (begin > end) {\n return;\n }\n int index = digit[begin] - '0';\n //cout << index << endl;\n for (char j : m[index]) {\n \n curr.push_back(j);\n // cout << j << curr << endl;\n proc(ret, curr, digit, begin + 1, end);\n curr.pop_back();\n }\n }\n\n vector<string> letterCombinations(string digits) {\n set<string> ret;\n string curr;\n int num = 0;\n\n if (digits.length() == 0)\n return vector<string>{};\n\n proc(ret, curr, digits, 0, digits.length() - 1);\n \n vector<string> v(ret.begin(), ret.end());\n\n return v;\n }\n};\n```\n","dir":"/algorithm/leetcode/","name":"电话号码的字母组合.md","path":"algorithm/leetcode/电话号码的字母组合.md","url":"/algorithm/leetcode/%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88.html"},{"sort":18,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=18 lang=cpp\n *\n * [18] 四数之和\n */\n\n// @lc code=start\nclass Solution {\npublic:\n set<vector<int>> fourSum(vector<int>& nums, int target, int i, int j) {\n set<vector<int>> ret;\n if (nums[i] > target) {\n return ret;\n }\n\n target -= nums[i];\n for (int m = i + 1; m <=j; ++m) {\n int t = target - nums[m];\n int l = m + 1;\n int r = j;\n\n while (l < r) {\n if ((nums[l] + nums[r]) < t) ++l;\n else if ((nums[l] + nums[r]) > t) --r;\n else {\n ret.insert(vector<int>{nums[i], nums[m], nums[l], nums[r]});\n while(l < r && nums[l] == nums[l + 1]) ++l;\n while(l < r && nums[r] == nums[r - 1]) --r;\n ++l;\n --r;\n }\n\n }\n }\n return ret;\n }\n\n vector<vector<int>> fourSum(vector<int>& nums, int target) {\n set<vector<int>> ret;\n\n sort(nums.begin(), nums.end());\n for (int i = 0; i < nums.size(); ++i) {\n auto t = fourSum(nums, target, i, nums.size() - 1);\n \n copy(t.begin(), t.end(), inserter(ret, ret.begin()));\n }\n\n return vector<vector<int>>(ret.begin(), ret.end());\n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"四数之和.md","path":"algorithm/leetcode/四数之和.md","url":"/algorithm/leetcode/%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C.html"},{"sort":19,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=19 lang=cpp\n *\n * [19] 删除链表的倒数第N个节点\n */\n\n// @lc code=start\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n * int val;\n * ListNode *next;\n * ListNode() : val(0), next(nullptr) {}\n * ListNode(int x) : val(x), next(nullptr) {}\n * ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n ListNode* removeNthFromEnd(ListNode* head, int n) {\n ListNode *pre = head;\n ListNode *next = head;\n\n if (head == NULL) {\n return NULL;\n }\n\n while (n-- > 0) {\n next = next->next;\n }\n\n if (next == NULL) {\n return head->next;\n }\n\n while (next->next != NULL) {\n pre = pre->next;\n next = next->next;\n }\n\n pre->next = pre->next->next;\n\n return head;\n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"删除链表的倒数第n个节点.md","path":"algorithm/leetcode/删除链表的倒数第n个节点.md","url":"/algorithm/leetcode/%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACn%E4%B8%AA%E8%8A%82%E7%82%B9.html"},{"sort":20,"layout":"default","title":null,"content":"```\n/*\n * @lc app=leetcode.cn id=20 lang=cpp\n *\n * [20] 有效的括号\n */\n\n// @lc code=start\nclass Solution {\npublic:\n bool isValid(string s) {\n stack<char> st;\n\n if (s.empty()) {\n return true;\n }\n\n for (auto ch : s) {\n if (st.empty() || ch == '(' || ch == '[' || ch == '{') {\n st.push(ch);\n continue;\n }\n\n if (ch == ')') {\n char top = st.top();\n st.pop();\n if (top != '(') {\n return false;\n }\n }\n\n if (ch == ']') {\n char top = st.top();\n st.pop();\n if (top != '[') {\n return false;\n }\n }\n\n if (ch == '}') {\n char top = st.top();\n st.pop();\n if (top != '{') {\n return false;\n }\n }\n }\n return st.empty();\n }\n};\n// @lc code=end\n\n\n```\n","dir":"/algorithm/leetcode/","name":"有效的括号.md","path":"algorithm/leetcode/有效的括号.md","url":"/algorithm/leetcode/%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7.html"}]